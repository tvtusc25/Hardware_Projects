$date
  Mon Nov 28 14:55:16 2022
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module alutestbench $end
$var reg 4 ! state[3:0] $end
$var reg 16 " srca[15:0] $end
$var reg 16 # srcb[15:0] $end
$var reg 16 $ dest[15:0] $end
$var reg 3 % opcode[2:0] $end
$var reg 16 & output[15:0] $end
$var reg 4 ' cr[3:0] $end
$var reg 1 ( clk $end
$var reg 1 ) reset $end
$scope module aluinstance $end
$var reg 16 * srca[15:0] $end
$var reg 16 + srcb[15:0] $end
$var reg 3 , op[2:0] $end
$var reg 4 - cr[3:0] $end
$var reg 16 . dest[15:0] $end
$var reg 17 / tdest[16:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b0000 !
b0000000000000000 "
b0000000000000000 #
bUUUUUUUUUUUUUUUU $
bUUU %
bUUUUUUUUUUUUUUUU &
bUU00 '
0(
0)
b0000000000000000 *
b0000000000000000 +
bUUU ,
bUU00 -
bUUUUUUUUUUUUUUUU .
bUUUUUUUUUUUUUUUUU /
#1000000
b0001 !
b0111111111111111 "
b0000000000000010 #
b1000000000000001 $
b000 %
b1000000000000001 &
b0110 '
1(
1)
b0111111111111111 *
b0000000000000010 +
b000 ,
b0110 -
b1000000000000001 .
b01000000000000001 /
#2000000
0(
#3000000
b0010 !
b1111111100010000 "
b1111111111111111 #
b1111111100001111 $
b1111111100001111 &
b1100 '
1(
b1111111100010000 *
b1111111111111111 +
b1100 -
b1111111100001111 .
b11111111100001111 /
#4000000
0(
#5000000
b0011 !
b0000000000010100 "
b0000000000010010 #
b0000000000000010 $
b001 %
b0000000000000010 &
b0000 '
1(
b0000000000010100 *
b0000000000010010 +
b001 ,
b0000 -
b0000000000000010 .
b00000000000000010 /
#6000000
0(
#7000000
b0100 !
b1111111111111110 "
b1111111111111111 #
b1111111111111111 $
b1111111111111111 &
b1100 '
1(
b1111111111111110 *
b1111111111111111 +
b1100 -
b1111111111111111 .
b11111111111111111 /
#8000000
0(
#9000000
b0101 !
b1111111111111111 "
b1010101010101010 #
b1010101010101010 $
b010 %
b1010101010101010 &
b0100 '
1(
b1111111111111111 *
b1010101010101010 +
b010 ,
b0100 -
b1010101010101010 .
b01010101010101010 /
#10000000
0(
#11000000
b0110 !
b0000000011111111 "
b0000000010101010 $
b0000000010101010 &
b0000 '
1(
b0000000011111111 *
b0000 -
b0000000010101010 .
b00000000010101010 /
#12000000
0(
#13000000
b0111 !
b1111111111111111 "
b1111111111111111 $
b011 %
b1111111111111111 &
b0100 '
1(
b1111111111111111 *
b011 ,
b0100 -
b1111111111111111 .
b01111111111111111 /
#14000000
0(
#15000000
b1000 !
b1111111100000000 "
b1111111110101010 $
b1111111110101010 &
1(
b1111111100000000 *
b1111111110101010 .
b01111111110101010 /
#16000000
0(
#17000000
b1001 !
b1111111111111111 "
b0101010101010101 $
b100 %
b0101010101010101 &
b0000 '
1(
b1111111111111111 *
b100 ,
b0000 -
b0101010101010101 .
b00101010101010101 /
#18000000
0(
#19000000
b1010 !
b1111111100000000 "
b0101010110101010 $
b0101010110101010 &
1(
b1111111100000000 *
b0101010110101010 .
b00101010110101010 /
#20000000
0(
#21000000
b1011 !
b1010101010101010 "
b0000000000000000 #
b0101010101010100 $
b101 %
b0101010101010100 &
b1000 '
1(
b1010101010101010 *
b0000000000000000 +
b101 ,
b1000 -
b0101010101010100 .
b10101010101010100 /
#22000000
0(
#23000000
b1100 !
b0000000000000001 #
b1101010101010101 $
b1101010101010101 &
b0100 '
1(
b0000000000000001 +
b0100 -
b1101010101010101 .
b01101010101010101 /
#24000000
0(
#25000000
b1101 !
b0000000000000000 #
b0101010101010101 $
b110 %
b0101010101010101 &
b1000 '
1(
b0000000000000000 +
b110 ,
b1000 -
b0101010101010101 .
b10101010101010101 /
#26000000
0(
#27000000
b1110 !
b0000000000000001 #
b0000 '
1(
b0000000000000001 +
b0000 -
b00101010101010101 /
#28000000
0(
#29000000
b1111 !
b0000000000000000 "
b0000001000110100 #
b0000000000000000 $
b111 %
b0000000000000000 &
b0001 '
1(
b0000000000000000 *
b0000001000110100 +
b111 ,
b0001 -
b0000000000000000 .
b00000000000000000 /
#30000000
0(
#31000000
b0000 !
b1111000000010010 "
b0000000000000000 #
b1111000000010010 $
b1111000000010010 &
b1100 '
1(
b1111000000010010 *
b0000000000000000 +
b1100 -
b1111000000010010 .
b11111000000010010 /
#32000000
0(
#33000000
b0001 !
b0111111111111111 "
b0000000000000010 #
b1000000000000001 $
b000 %
b1000000000000001 &
b0110 '
1(
b0111111111111111 *
b0000000000000010 +
b000 ,
b0110 -
b1000000000000001 .
b01000000000000001 /
#34000000
0(
#35000000
b0010 !
b1111111100010000 "
b1111111111111111 #
b1111111100001111 $
b1111111100001111 &
b1100 '
1(
b1111111100010000 *
b1111111111111111 +
b1100 -
b1111111100001111 .
b11111111100001111 /
#36000000
0(
#37000000
b0011 !
b0000000000010100 "
b0000000000010010 #
b0000000000000010 $
b001 %
b0000000000000010 &
b0000 '
1(
b0000000000010100 *
b0000000000010010 +
b001 ,
b0000 -
b0000000000000010 .
b00000000000000010 /
#38000000
0(
#39000000
b0100 !
b1111111111111110 "
b1111111111111111 #
b1111111111111111 $
b1111111111111111 &
b1100 '
1(
b1111111111111110 *
b1111111111111111 +
b1100 -
b1111111111111111 .
b11111111111111111 /
#40000000
